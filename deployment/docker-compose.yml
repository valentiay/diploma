version: '3'
services:
  zookeeper:
    image: zookeeper
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_RETENTION_MS: 1000
      KAFKA_CLEANUP_POLICY: delete
      KAFKA_NUM_PARTITIONS: 2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: diploma
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    deploy:
      placement:
        constraints:
          - node.role == manager

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    deploy:
      placement:
        constraints:
          - node.role == manager
    depends_on:
      - prometheus

  generator:
    image: valentiay/generator
    ports:
      - "8080:8080"
    environment:
      DIMENSIONS: 8
      NUM_RULES: 50000
      GEN_RULE: uniform
      GEN_POINT: uniform
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      OUTPUT_TOPIC: points
      MONGO_HOSTS: mongo
    deploy:
      replicas: 1
    depends_on:
      - mongo
      - kafka

  classifier:
    image: valentiay/classifier
    ports:
      - "8081:8081"
    environment:
      DIMENSIONS: 8
      INDEX_TYPE: bulkRTreeRule
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INPUT_TOPIC: points
      OUTPUT_TOPIC: matches
      MONGO_HOSTS: mongo
      ZOOKEEPER_CONNECT: zookeeper:2181
      GROUP_SIZE: 2
    deploy:
      replicas: 4
    depends_on:
      - kafka
      - mongo
      - zookeeper

  validator:
    image: valentiay/validator
    ports:
      - "8082:8082"
    environment:
      DIMENSIONS: 8
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INPUT_TOPIC: matches
      MONGO_HOSTS: mongo
    depends_on:
      - mongo
      - kafka
